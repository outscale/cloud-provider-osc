name: 'Deploy cluter'
description: 'Deploy k8s cluster'
inputs:
  osc_access_key:
    description: 'ACCESS KEY'
    required: true
  osc_secret_key:
    description: 'SECRET KEY'
    required: true
  osc_region:
    description: 'Region'
    required: true
  oks_access_key:
    description: 'ACCESS KEY'
    required: true
  oks_secret_key:
    description: 'SECRET KEY'
    required: true
  oks_region:
    description: 'Region'
    required: true
  public_cloud:
    description: 'Create cluster in public cloud'
    required: true
    default: "false"
  image_id:
    description: 'OMI ID'
    required: true
  version:
    description: 'version of the image'
    required: true
  registry:
    description: 'registry host'
    required: true
runs:
  using: "composite"
  steps:
    - name: ‚¨áÔ∏è Checkout CAPOSC
      uses: actions/checkout@v4
      with:
        repository: 'outscale/cluster-api-provider-outscale'
        path: "cluster-api-provider-outscale"
    - name: üë∑ Deploy Cluster (VPC)
      id: caposc
      uses: outscale/cluster-api-provider-outscale/github_actions/deploy_cluster@main
      with:
        RUNNER_NAME: ${{ runner.name }}
        OKS_ACCESS_KEY: ${{ inputs.oks_access_key }}
        OKS_SECRET_KEY: ${{ inputs.oks_secret_key }}
        OKS_REGION: ${{ inputs.oks_region }}
        OSC_ACCESS_KEY: ${{ inputs.osc_access_key }}
        OSC_SECRET_KEY: ${{ inputs.osc_secret_key }}
        OSC_REGION: ${{ inputs.osc_region }}
        CLUSTER_NAME: "ccm"
        IMAGE_NAME: "ubuntu-2204-kubernetes-v1.30.14-2025-06-26"
        CCM: "false"
    - name: üë∑ Install CCM
      run: |
        kubectl create secret generic osc-secret --from-literal=key_id=${{ inputs.osc_access_key }} --from-literal=access_key=${{ inputs.osc_secret_key }} --from-literal=aws_default_region=${{ inputs.osc_region }} \
          --from-literal=aws_availability_zones=MY_AWS_AVAILABILITY_ZONES --from-literal=osc_account_id=MY_OSC_ACCOUNT_ID --from-literal=osc_account_iam=MY_OSC_ACCOUNT_IAM --from-literal=osc_user_id=MY_OSC_USER_ID --from-literal=osc_arn=MY_OSC_ARN \
          -n kube-system
        echo "installing CCM"
        helm install --wait k8s-osc-ccm deploy/k8s-osc-ccm --set oscSecretName=osc-secret --set image.repository=${{ inputs.registry }}/outscale/cloud-provider-osc --set image.tag=${{ inputs.version }}
        echo "waiting for worker nodes"
        kubectl wait --for=condition=Ready nodes --all --timeout=900s
        kubectl get nodes -o wide
        echo "waiting for pods"
        kubectl wait --for=condition=Ready po --all -A --timeout=900s
        kubectl get po -A
      shell: bash
      env:
        KUBECONFIG: "${{ github.workspace }}/${{ steps.caposc.outputs.KUBECONFIG }}"
        OSC_ACCESS_KEY: ${{ inputs.osc_access_key }}
        OSC_SECRET_KEY: ${{ inputs.osc_secret_key }}
        OSC_REGION: ${{ inputs.osc_region }}
    - name: üß™ Run e2e tests
      id: e2etest
      run: |
        make e2etest
      shell: bash
      env:
        KUBECONFIG: "${{ github.workspace }}/${{ steps.caposc.outputs.KUBECONFIG }}"
        OSC_ACCESS_KEY: ${{ inputs.osc_access_key }}
        OSC_SECRET_KEY: ${{ inputs.osc_secret_key }}
        OSC_REGION: ${{ inputs.osc_region }}
        AWS_ACCESS_KEY_ID: ${{ inputs.osc_access_key }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.osc_secret_key }}
        AWS_DEFAULT_REGION: ${{ inputs.osc_region }}
        AWS_AVAILABILITY_ZONES: "${{ inputs.osc_region }}a"
    - name: üìù Get CCM logs
      run: |
        kubectl logs -l app=osc-cloud-controller-manager -n kube-system --tail=-1
      if: ${{ failure() && steps.e2etest.conclusion == 'failure' }}
      shell: bash
      env:
        KUBECONFIG: "${{ github.workspace }}/${{ steps.caposc.outputs.KUBECONFIG }}"
