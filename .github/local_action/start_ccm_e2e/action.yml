name: 'Deploy cluter'
description: 'Deploy k8s cluster'
inputs:
  osc_access_key:
    description: 'ACCESS KEY'
    required: true
  osc_secret_key:
    description: 'SECRET KEY'
    required: true
  osc_region:
    description: 'Region'
    required: true
  oks_access_key:
    description: 'ACCESS KEY'
    required: true
  oks_secret_key:
    description: 'SECRET KEY'
    required: true
  oks_region:
    description: 'Region'
    required: true
  public_cloud:
    description: 'Create cluster in public cloud'
    required: true
    default: "false"
  image_id:
    description: 'OMI ID'
    required: true
  version:
    description: 'version of the image'
    required: true
  registry:
    description: 'registry host'
    required: true
runs:
  using: "composite"
  steps:
    - name: ‚¨áÔ∏è Checkout CAPOSC
      uses: actions/checkout@v4
      with:
        repository: 'outscale/cluster-api-provider-outscale'
        path: "cluster-api-provider-outscale"
    - name: üë∑ Deploy Cluster (VPC)
      id: caposc
      uses: outscale/cluster-api-provider-outscale/github_actions/deploy_cluster@main
      with:
        RUNNER_NAME: ${{ runner.name }}
        OKS_ACCESS_KEY: ${{ inputs.oks_access_key }}
        OKS_SECRET_KEY: ${{ inputs.oks_secret_key }}
        OKS_REGION: ${{ inputs.oks_region }}
        OSC_ACCESS_KEY: ${{ inputs.osc_access_key }}
        OSC_SECRET_KEY: ${{ inputs.osc_secret_key }}
        OSC_REGION: ${{ inputs.osc_region }}
        CLUSTER_NAME: "ccm"
        IMAGE_NAME: "ubuntu-2204-kubernetes-v1.31.12-2025-08-27"
        WORKER_COUNT: 2
        CCM: "false"
    - name: üë∑ Install CCM
      run: |
        kubectl create secret generic osc-secret --from-literal=access_key=${{ inputs.osc_access_key }} --from-literal=secret_key=${{ inputs.osc_secret_key }} --from-literal=region=${{ inputs.osc_region }} \
          -n kube-system
        echo "installing CCM"
        helm install --wait k8s-osc-ccm deploy/k8s-osc-ccm --set oscSecretName=osc-secret --set image.repository=${{ inputs.registry }}/outscale/cloud-provider-osc --set image.tag=${{ inputs.version }} \
          --set extraLoadBalancerTags.clikey=clivalue
        echo "waiting for worker nodes"
        kubectl wait --for=condition=Ready nodes --all --timeout=900s
        kubectl get nodes -o wide
        echo "waiting for pods"
        kubectl wait --for=condition=Ready po --all -A --timeout=900s
        kubectl get po -A
      shell: bash
      env:
        KUBECONFIG: "${{ github.workspace }}/${{ steps.caposc.outputs.KUBECONFIG }}"
        OSC_ACCESS_KEY: ${{ inputs.osc_access_key }}
        OSC_SECRET_KEY: ${{ inputs.osc_secret_key }}
        OSC_REGION: ${{ inputs.osc_region }}
    - name: üß™ Run e2e tests
      id: e2etest
      run: |
        make e2etest
      shell: bash
      env:
        KUBECONFIG: "${{ github.workspace }}/${{ steps.caposc.outputs.KUBECONFIG }}"
        OSC_ACCESS_KEY: ${{ inputs.osc_access_key }}
        OSC_SECRET_KEY: ${{ inputs.osc_secret_key }}
        OSC_REGION: ${{ inputs.osc_region }}
    - name: üìù Get CCM logs
      run: |
        kubectl logs -l app=osc-cloud-controller-manager -n kube-system --tail=-1
      if: ${{ failure() && steps.e2etest.conclusion == 'failure' }}
      shell: bash
      env:
        KUBECONFIG: "${{ github.workspace }}/${{ steps.caposc.outputs.KUBECONFIG }}"
    - name: üë∑ Reconfigure CCM with credentials in profile file
      run: |
        profile="{\"default\":{\"access_key\":\"${{ inputs.osc_access_key }}\",\"secret_key\":\"${{ inputs.osc_secret_key }}\"}}"
        kubectl create secret generic osc-secret-file --from-literal=config.json=$profile -n kube-system
        echo "updating CCM config"
        helm upgrade --wait k8s-osc-ccm deploy/k8s-osc-ccm --set oscSecretName=osc-secret-file --set oscCredentialsFromFile=true --set image.repository=${{ inputs.registry }}/outscale/cloud-provider-osc --set image.tag=${{ inputs.version }}\
          --set extraLoadBalancerTags.clikey=clivalue
        echo "waiting for pods"
        kubectl wait --for=condition=Ready po --all -A --timeout=900s
        kubectl get po -A
      shell: bash
      env:
        KUBECONFIG: "${{ github.workspace }}/${{ steps.caposc.outputs.KUBECONFIG }}"
        OSC_ACCESS_KEY: ${{ inputs.osc_access_key }}
        OSC_SECRET_KEY: ${{ inputs.osc_secret_key }}
        OSC_REGION: ${{ inputs.osc_region }}
    - name: üß™ Run e2e tests with credentials in profile file
      id: e2efast
      run: |
        E2E_FOCUS=fast make e2etest
      shell: bash
      env:
        KUBECONFIG: "${{ github.workspace }}/${{ steps.caposc.outputs.KUBECONFIG }}"
        OSC_ACCESS_KEY: ${{ inputs.osc_access_key }}
        OSC_SECRET_KEY: ${{ inputs.osc_secret_key }}
        OSC_REGION: ${{ inputs.osc_region }}
    - name: üìù Get CCM logs
      run: |
        kubectl logs -l app=osc-cloud-controller-manager -n kube-system --tail=-1
      if: ${{ failure() && steps.e2efast.conclusion == 'failure' }}
      shell: bash
      env:
        KUBECONFIG: "${{ github.workspace }}/${{ steps.caposc.outputs.KUBECONFIG }}"
