name: e2e_test

on:
  pull_request:
    branches:
      - OSC-MIGRATION
    paths:
      - "**.go"
      - "Dockerfile"
      - "Makefile"
      - "go.*"
      - "deploy/k8s-osc-ccm/**.yaml"
  push:
    branches: [ OSC-MIGRATION ]
    paths:
      - "**.go"
      - "Dockerfile"
      - "Makefile"
      - "go.*"
      - "deploy/k8s-osc-ccm/**.yaml"
      - ".github/workflows/e2e_test.yml"
  workflow_dispatch:
    
jobs:
  create_cluster:
    runs-on: [self-hosted, linux]
    steps:
    # Retrieve the code from the repo (UNSAFE)
    - uses: actions/checkout@v2
      with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
    - uses: azure/setup-kubectl@v3.0
    - uses: azure/setup-helm@v3
      with:
        version: v3.10.1
    - uses: actions/setup-python@v2
    - uses: outscale-dev/frieza-github-actions/frieza-clean@master
      with:
        access_key: ${{ secrets.OSC_ACCESS_KEY }}
        secret_key: ${{ secrets.OSC_SECRET_KEY }}
        region: ${{ secrets.OSC_REGION }}
    - name: Install osc-cli
      run: pip install osc-sdk
    - name: Configure osc-cli
      run: |
        apt install -y jq
        mkdir -p $HOME/.osc
        jq --null-input --arg accesskey "$osc_access_key" --arg secretkey "$osc_secret_key" --arg region "$osc_region" '{"default": {"access_key" : $accesskey, "secret_key": $secretkey, "region_name": $region, "host": "outscale.com", "https": true, "method": "POST"}}' > $HOME/.osc/config.json
      env:
        osc_access_key: ${{ secrets.OSC_ACCESS_KEY }}
        osc_secret_key: ${{ secrets.OSC_SECRET_KEY }}
        osc_region: ${{ secrets.OSC_REGION }}
    - name: Build image
      run: |
        make buildx-image image-tag
      env:
        REGISTRY_IMAGE: localhost:4242/osc/cloud-provider-osc
        VERSION: ${{ format('{0}.{1}', github.sha, github.run_attempt) }}
    ## Create VPC Cluster
    - name: Test on VPC cluster
      uses: ./.github/local_action/start_ccm_e2e
      with:
        osc_access_key: ${{ secrets.OSC_ACCESS_KEY }}
        osc_secret_key: ${{ secrets.OSC_SECRET_KEY }}
        osc_region: ${{ secrets.OSC_REGION }}
        public_cloud: "false"
        image_id: ${{ secrets.OMI_ID }}
        version: ${{ format('{0}.{1}', github.sha, github.run_attempt) }}
        rke_version: "v1.4.12"
        kubernetes_version: "v1.26.11-rancher2-1"
        bastion_vm_type: ${{ secrets.BASTION_VMTYPE }}
        worker_vm_type: ${{ secrets.WORKER_VMTYPE }}
        control_plane_vm_type: ${{ secrets.CP_VMTYPE }}        
    ## Create Public Cloud Cluster
    - name: Test on Public cluster
      uses: ./.github/local_action/start_ccm_e2e
      with:
        osc_access_key: ${{ secrets.OSC_ACCESS_KEY }}
        osc_secret_key: ${{ secrets.OSC_SECRET_KEY }}
        osc_region: ${{ secrets.OSC_REGION }}
        public_cloud: "true"
        image_id: ${{ secrets.OMI_ID }}
        version: ${{ format('{0}.{1}', github.sha, github.run_attempt) }}
        rke_version: "v1.4.12"
        kubernetes_version: "v1.26.11-rancher2-1"
        bastion_vm_type: ${{ secrets.BASTION_VMTYPE }}
        worker_vm_type: ${{ secrets.WORKER_VMTYPE }}
        control_plane_vm_type: ${{ secrets.CP_VMTYPE }}
    - name: Clean images
      run: |
        docker image prune -a -f
